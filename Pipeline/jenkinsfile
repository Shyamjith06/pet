node {
     
  stage('Git-Checkout') {
   git branch:'QA', url:'https://github.com/Shyamjith06/petclinic-1.git'
  }
    
 def project_path="petclinic"
 
 dir(project_path) {
    
  stage('Maven-Clean') {
   sh label: '', script: 'mvn clean'
  }
    
 stage('Maven-Compile') {
   sh label: '', script: 'mvn compile'
  }
 stage('Sonar Analysis'){
withSonarQubeEnv('SonarQube')
{ 
sh 'mvn sonar:sonar'
}
}
stage("Quality Gate"){
          timeout(time: 1, unit: 'MINUTES') {
              def qg = waitForQualityGate()
              if (qg.status != 'OK') {
                  error "Pipeline aborted due to quality gate failure: ${qg.status}"
              }
          }
}
   stage('Maven-Test') {
   sh label: '', script: 'mvn test'
  }
  
   stage('Maven-Package') {
   sh label: '', script: 'mvn package'
  }
  stage('Jfrog Artifacory Upload') {
        def server= Artifactory.server 'Artifactory'
                    def uploadSpec= """{
                        "files": [{
                        "pattern": "/root/.jenkins/workspace/petclinic-1/petclinic/target/*.war",
                        "target": "petclinic-1"}]
                    }"""
        server.upload(uploadSpec)
       
        }
      
   stage('Docker-Stage-Deployment') {
   sh label: '', script: 'docker-compose up -d --build'
  }
  }
  }


